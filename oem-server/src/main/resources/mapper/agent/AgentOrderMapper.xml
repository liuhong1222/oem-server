<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.credit.oem.admin.modules.agent.dao.AgentOrderMapper">
    <resultMap id="BaseResultMap" type="com.credit.oem.admin.modules.agent.entity.AgentOrder">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="agent_id" jdbcType="BIGINT" property="agentId"/>
        <result column="product_id" jdbcType="BIGINT" property="productId"/>
        <result column="order_no" jdbcType="VARCHAR" property="orderNo"/>
        <result column="trade_no" jdbcType="VARCHAR" property="tradeNo"/>
        <result column="type" jdbcType="TINYINT" property="type"/>
        <result column="price" jdbcType="DECIMAL" property="price"/>
        <result column="number" jdbcType="BIGINT" property="number"/>
        <result column="money" jdbcType="DECIMAL" property="money"/>
        <result column="pay_type" jdbcType="TINYINT" property="payType"/>
        <result column="pay_time" jdbcType="TIMESTAMP" property="payTime"/>
        <result column="status" jdbcType="TINYINT" property="status"/>
        <result column="remark" jdbcType="VARCHAR" property="remark"/>
        <result column="version" jdbcType="INTEGER" property="version"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="role_type" jdbcType="TINYINT" property="roleType"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, agent_id, product_id, order_no, trade_no, type, price, number, money, pay_type, 
    pay_time, status, remark, role_type, version, create_time, update_time
  </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from o_agent_order
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from o_agent_order
    where id = #{id,jdbcType=BIGINT}
  </delete>
    <insert id="insert" parameterType="com.credit.oem.admin.modules.agent.entity.AgentOrder">
    insert into o_agent_order (id, agent_id, product_id, 
      order_no, trade_no, type, 
      price, number, money, 
      pay_type, pay_time, status, 
      remark, role_type, version, 
      create_time, update_time)
    values (#{id,jdbcType=BIGINT}, #{agentId,jdbcType=BIGINT}, #{productId,jdbcType=BIGINT}, 
      #{orderNo,jdbcType=VARCHAR}, #{tradeNo,jdbcType=VARCHAR}, #{type,jdbcType=TINYINT}, 
      #{price,jdbcType=DECIMAL}, #{number,jdbcType=BIGINT}, #{money,jdbcType=DECIMAL}, 
      #{payType,jdbcType=TINYINT}, #{payTime,jdbcType=TIMESTAMP}, #{status,jdbcType=TINYINT}, 
      #{remark,jdbcType=VARCHAR}, #{roleType,jdbcType=TINYINT}, #{version,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
    <insert id="insertSelective" parameterType="com.credit.oem.admin.modules.agent.entity.AgentOrder">
        insert into o_agent_order
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="agentId != null">
                agent_id,
            </if>
            <if test="productId != null">
                product_id,
            </if>
            <if test="orderNo != null">
                order_no,
            </if>
            <if test="tradeNo != null">
                trade_no,
            </if>
            <if test="type != null">
                type,
            </if>
            <if test="price != null">
                price,
            </if>
            <if test="number != null">
                number,
            </if>
            <if test="money != null">
                money,
            </if>
            <if test="payType != null">
                pay_type,
            </if>
            <if test="payTime != null">
                pay_time,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="remark != null">
                remark,
            </if>
            <if test="version != null">
                version,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="roleType != null">
                role_type,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="agentId != null">
                #{agentId,jdbcType=BIGINT},
            </if>
            <if test="productId != null">
                #{productId,jdbcType=BIGINT},
            </if>
            <if test="orderNo != null">
                #{orderNo,jdbcType=VARCHAR},
            </if>
            <if test="tradeNo != null">
                #{tradeNo,jdbcType=VARCHAR},
            </if>
            <if test="type != null">
                #{type,jdbcType=TINYINT},
            </if>
            <if test="price != null">
                #{price,jdbcType=DECIMAL},
            </if>
            <if test="number != null">
                #{number,jdbcType=BIGINT},
            </if>
            <if test="money != null">
                #{money,jdbcType=DECIMAL},
            </if>
            <if test="payType != null">
                #{payType,jdbcType=TINYINT},
            </if>
            <if test="payTime != null">
                #{payTime,jdbcType=TIMESTAMP},
            </if>
            <if test="status != null">
                #{status,jdbcType=TINYINT},
            </if>
            <if test="remark != null">
                #{remark,jdbcType=VARCHAR},
            </if>
            <if test="version != null">
                #{version,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="roleType != null">
                #{roleType,jdbcType=TINYINT},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.credit.oem.admin.modules.agent.entity.AgentOrder">
        update o_agent_order
        <set>
            <if test="agentId != null">
                agent_id = #{agentId,jdbcType=BIGINT},
            </if>
            <if test="productId != null">
                product_id = #{productId,jdbcType=BIGINT},
            </if>
            <if test="orderNo != null">
                order_no = #{orderNo,jdbcType=VARCHAR},
            </if>
            <if test="tradeNo != null">
                trade_no = #{tradeNo,jdbcType=VARCHAR},
            </if>
            <if test="type != null">
                type = #{type,jdbcType=TINYINT},
            </if>
            <if test="price != null">
                price = #{price,jdbcType=DECIMAL},
            </if>
            <if test="number != null">
                number = #{number,jdbcType=BIGINT},
            </if>
            <if test="money != null">
                money = #{money,jdbcType=DECIMAL},
            </if>
            <if test="payType != null">
                pay_type = #{payType,jdbcType=TINYINT},
            </if>
            <if test="payTime != null">
                pay_time = #{payTime,jdbcType=TIMESTAMP},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=TINYINT},
            </if>
            <if test="remark != null">
                remark = #{remark,jdbcType=VARCHAR},
            </if>
            <if test="version != null">
                version = #{version,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="roleType != null">
                role_type = #{roleType,jdbcType=TINYINT},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.credit.oem.admin.modules.agent.entity.AgentOrder">
    update o_agent_order
    set agent_id = #{agentId,jdbcType=BIGINT},
      product_id = #{productId,jdbcType=BIGINT},
      order_no = #{orderNo,jdbcType=VARCHAR},
      trade_no = #{tradeNo,jdbcType=VARCHAR},
      type = #{type,jdbcType=TINYINT},
      price = #{price,jdbcType=DECIMAL},
      number = #{number,jdbcType=BIGINT},
      money = #{money,jdbcType=DECIMAL},
      pay_type = #{payType,jdbcType=TINYINT},
      pay_time = #{payTime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=TINYINT},
      remark = #{remark,jdbcType=VARCHAR},
      version = #{version,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      role_type = #{roleType,jdbcType=TINYINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
    <select id="queryAgentRechargeTotalDataList" parameterType="HashMap"
            resultType="com.credit.oem.admin.modules.agent.model.data.AgentRechargeTotalData">
        select
        agent_id as agentId,sum(money) as totalRechargeMoney, sum(number) as totalRechargeNumber
        from o_agent_order
        where status=1 and type=1 and agent_id in
        <foreach item="item" index="index" collection="agentIdList" open="(" separator="," close=")">
            #{item}
        </foreach>
        group by agent_id
    </select>

    <select id="queryFinanceAgentRechargeDataList"
            parameterType="com.credit.oem.admin.modules.agent.model.param.FinanceRechargeParam"
            resultType="com.credit.oem.admin.modules.agent.model.data.FinanceAgentRechargeData">
        select ag.id as agentId, ag.agent_no as agentNo,ag.mch_id as mchId,ag.company_name as companyName ,
        agLv.level_name as levelName,
        od.pay_time as payTime,od.pay_type as payType,od.price,od.number,od.money,
        od.order_no as orderNo, od.id as orderId , ag.mobile as agentMobile
        from o_agent as ag
        INNER JOIN o_agent_level as agLv on ag.id=agLv.agent_id
        INNER JOIN o_agent_order as od on ag.id=od.agent_id
        where od.status=1 and od.type=1
        <if test="companyName != null and companyName !=''">
            and ag.company_name like concat('%',#{companyName},'%')
        </if>

        <if test="payType != null and payType !=''">
            and od.pay_type= #{payType}
        </if>
        <if test="startTime != null and startTime !=''">
            and od.pay_time &gt;= #{startTime}
        </if>
        <if test="endTime != null and endTime !=''">
            and od.pay_time &lt;= #{endTime}
        </if>
        <if test="agentMobile!=null and  agentMobile!=''">
            and ag.mobile like concat('%',#{agentMobile},'%')
        </if>
        order by od.id desc
    </select>


    <select id="queryFinanceAgentRechargeTotalInfo"
            parameterType="com.credit.oem.admin.modules.agent.model.param.FinanceRechargeParam"
            resultType="com.credit.oem.admin.modules.agent.model.data.FinanceTotalInfoData">
        select sum(od.number) as number,sum(od.money) as money
        from o_agent as ag
        INNER JOIN o_agent_level as agLv on ag.id=agLv.agent_id
        INNER JOIN o_agent_order as od on ag.id=od.agent_id
        where od.status=1 and od.type=1
        <if test="companyName != null and companyName !=''">
            and ag.company_name like concat('%',#{companyName},'%')
        </if>

        <if test="payType != null and payType !=''">
            and od.pay_type= #{payType}
        </if>
        <if test="startTime != null and startTime !=''">
            and od.pay_time &gt;= #{startTime}
        </if>
        <if test="endTime != null and endTime !=''">
            and od.pay_time &lt;= #{endTime}
        </if>
        <if test="agentMobile!=null and  agentMobile!=''">
            and ag.mobile like concat('%',#{agentMobile},'%')
        </if>
    </select>

    <select id="queryFinanceMyRechargeDataList"
            parameterType="com.credit.oem.admin.modules.agent.model.param.FinanceRechargeParam"
            resultType="com.credit.oem.admin.modules.agent.model.data.FinanceMyRechargeData">
        select ag.id as agentId,
        agLv.level_name as levelName,
        od.pay_time as payTime,od.pay_type as payType,od.price,od.number,od.money,
        od.order_no as orderNo,od.id as orderId
        from o_agent as ag
        INNER JOIN o_agent_level as agLv on ag.id=agLv.agent_id
        INNER JOIN o_agent_order as od on ag.id=od.agent_id
        where od.status=1 and od.type=1 and ag.id = #{agentId}
        <if test="payType != null and payType !=''">
            and od.pay_type= #{payType}
        </if>
        <if test="startTime != null and startTime !=''">
            and od.pay_time &gt;= #{startTime}
        </if>
        <if test="endTime != null and endTime !=''">
            and od.pay_time &lt;= #{endTime}
        </if>
        order by od.id desc
    </select>


    <select id="queryFinanceMyRechargeTotalInfo"
            parameterType="com.credit.oem.admin.modules.agent.model.param.FinanceRechargeParam"
            resultType="com.credit.oem.admin.modules.agent.model.data.FinanceTotalInfoData">
        select sum(od.number) as number,sum(od.money) as money
        from o_agent as ag
        INNER JOIN o_agent_level as agLv on ag.id=agLv.agent_id
        INNER JOIN o_agent_order as od on ag.id=od.agent_id
        where od.status=1 and od.type=1 and ag.id = #{agentId}
        <if test="payType != null and payType !=''">
            and od.pay_type= #{payType}
        </if>
        <if test="startTime != null and startTime !=''">
            and od.pay_time &gt;= #{startTime}
        </if>
        <if test="endTime != null and endTime !=''">
            and od.pay_time &lt;= #{endTime}
        </if>
    </select>

    <select id="sumMoney" resultType="java.math.BigDecimal">
    SELECT
    sum(t1.money)
    FROM
    o_agent_order t1
    where t1.status=1 and t1.type=1
  </select>

    <select id="sumNumber" resultType="java.lang.Long">
    SELECT
    sum(t1.number)
    FROM
    o_agent_order t1
    where t1.status=1 and t1.type=1
  </select>

    <select id="countAgentCanUpgrade" resultType="java.lang.Long">
    select count(*)
    from
    (select
      sum(od.money) as money,
      bslv.id,bslv.max_recharge
    from o_agent_order as od
      INNER JOIN o_agent_level as aglv on od.agent_id =aglv.agent_id
      INNER JOIN o_agent_basic_level as bslv on aglv.level_id=bslv.id
    where od.product_id=1 and od.`status`=1 and od.type=1 and od.money is not null
    group by bslv.id,bslv.max_recharge) as tb
    where tb.money &gt; max_recharge
  </select>

    <select id="findOrderByOrderNoAndStatus" parameterType="HashMap" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from o_agent_order
        where order_no = #{orderNo}
        and status=#{status}
    </select>


    <update id="updateByIdAndVersionSelective"
            parameterType="com.credit.oem.admin.modules.agent.entity.AgentOrder">
        update o_agent_order
        <set>
            <if test="agentId != null">
                agent_id = #{agentId,jdbcType=BIGINT},
            </if>
            <if test="productId != null">
                product_id = #{productId,jdbcType=BIGINT},
            </if>
            <if test="orderNo != null">
                order_no = #{orderNo,jdbcType=VARCHAR},
            </if>
            <if test="tradeNo != null">
                trade_no = #{tradeNo,jdbcType=VARCHAR},
            </if>
            <if test="type != null">
                type = #{type,jdbcType=TINYINT},
            </if>
            <if test="price != null">
                price = #{price,jdbcType=DECIMAL},
            </if>
            <if test="number != null">
                number = #{number,jdbcType=BIGINT},
            </if>
            <if test="money != null">
                money = #{money,jdbcType=DECIMAL},
            </if>
            <if test="payType != null">
                pay_type = #{payType,jdbcType=TINYINT},
            </if>
            <if test="payTime != null">
                pay_time = #{payTime,jdbcType=TIMESTAMP},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=TINYINT},
            </if>
            <if test="remark != null">
                remark = #{remark,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="roleType != null">
                role_type = #{roleType,jdbcType=TINYINT},
            </if>
            version=version+1
        </set>
        where id = #{id,jdbcType=BIGINT}
        and version = #{version,jdbcType=INTEGER}
    </update>

    <select id="findOrderByOrderNo" parameterType="HashMap" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from o_agent_order
        where order_no = #{orderNo}
    </select>


</mapper>
